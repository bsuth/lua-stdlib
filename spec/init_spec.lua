local
stl
=
require(
(
'stl'
)
)
spec(
(
'expose G direcly via stl'
)
,
function()
for
key
,
value
in
pairs(
stl
.G
)
do
assert
.are
.equal(
stl
[
key
]
,
value
)
end
end
)
spec(
(
'load / unload'
)
,
function()
assert
.is_nil(
kpairs
)
assert
.is_nil(
math
.clamp
)
assert
.is_nil(
math
.round
)
assert
.is_nil(
table
.assign
)
assert
.is_nil(
table
.clone
)
stl
.load(
)
assert
.is_function(
kpairs
)
assert
.is_function(
math
.clamp
)
assert
.is_function(
math
.round
)
assert
.is_function(
table
.assign
)
assert
.is_function(
table
.clone
)
stl
.unload(
)
assert
.is_nil(
kpairs
)
assert
.is_nil(
math
.clamp
)
assert
.is_nil(
math
.round
)
assert
.is_nil(
table
.assign
)
assert
.is_nil(
table
.clone
)
end
)
-- Compiled with Erde 0.5-1
-- __ERDE_COMPILED__