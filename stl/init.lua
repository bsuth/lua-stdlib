local
_MODULE
=
{
}
_MODULE
.G
=
require(
(
'stl.G'
)
)
for
key
,
value
in
pairs(
_MODULE
.G
)
do
_MODULE
[
key
]
=
value
end
local
libs
=
{
}
local
function
loadlib
(libname)
local
lib
=
require(
(
"stl."
..
tostring(
libname
)
)
)
_MODULE
[
libname
]
=
lib
libs
[
libname
]
=
lib
end
loadlib(
(
'math'
)
)
loadlib(
(
'table'
)
)
function
_MODULE.load
()
for
key
,
value
in
pairs(
_MODULE
.G
)
do
_G
[
key
]
=
value
end
for
name
,
lib
in
pairs(
libs
)
do
for
key
,
value
in
pairs(
lib
)
do
_G
[
name
]
[
key
]
=
value
end
end
end
function
_MODULE.unload
()
for
key
,
value
in
pairs(
_MODULE
.G
)
do
if
_G
[
key
]
==
value
then
_G
[
key
]
=
nil
end
end
for
name
,
lib
in
pairs(
libs
)
do
for
key
,
value
in
pairs(
lib
)
do
if
_G
[
name
]
[
key
]
==
value
then
_G
[
name
]
[
key
]
=
nil
end
end
end
end
return
_MODULE
-- Compiled with Erde 0.5-1
-- __ERDE_COMPILED__