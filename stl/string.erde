local function split(s, separator = '%s+') {
  local result = {}
  local start, end = s:find(separator)

  while start != nil {
    table.insert(result, s:sub(1, start - 1))
    s = s:sub(end + 1) || ''
    start, end = s:find(separator)
  }

  table.insert(result, s)
  return result
}

local function escape(s) {
  local result = {}

  for _, part in ipairs(split(s, '%%%%')) {
    part = part:gsub('^([().*?[^$+-])', '%%%1')
    part = part:gsub('([^%%])([().*?[^$+-])', '%1%%%2')
    part = part:gsub('%%([^%%().*?[^$+-])', '%%%%%1')
    part = part:gsub('%%$', '%%%%')
    table.insert(result, part)
  }

  return table.concat(result, '%%')
}

local function trim(s, pattern = '%s+') {
  -- Wrap in parentheses to only get first return
  return (s:gsub("^{pattern}", ''):gsub("{pattern}$", ''))
}

return setmetatable({
  escape = escape,
  split = split,
  trim = trim,
}, { __index = string })
