local
function
split
(s,separator)
if separator == nil then separator = 
(
'%s+'
)
end
local
result
=
{
}
local
start
,
__ERDE_SUBSTITUTE_end__
=
s
:find(
separator
)
while
start
~=
nil
do
table
.insert(
result
,
s
:sub(
1
,
start
-
1
)
)
s
=
s
:sub(
__ERDE_SUBSTITUTE_end__
+
1
)
or
(
''
)
start
,
__ERDE_SUBSTITUTE_end__
=
s
:find(
separator
)
end
table
.insert(
result
,
s
)
return
result
end
local
function
escape
(s)
local
result
=
{
}
for
_
,
part
in
ipairs(
split(
s
,
(
'%%%%'
)
)
)
do
part
=
part
:gsub(
(
'^([().*?[^$+-])'
)
,
(
'%%%1'
)
)
part
=
part
:gsub(
(
'([^%%])([().*?[^$+-])'
)
,
(
'%1%%%2'
)
)
part
=
part
:gsub(
(
'%%([^%%().*?[^$+-])'
)
,
(
'%%%%%1'
)
)
part
=
part
:gsub(
(
'%%$'
)
,
(
'%%%%'
)
)
table
.insert(
result
,
part
)
end
return
table
.concat(
result
,
(
'%%'
)
)
end
local
function
trim
(s,pattern)
if pattern == nil then pattern = 
(
'%s+'
)
end
return
s
:gsub(
(
"^"
..
tostring(
pattern
)
)
,
(
''
)
)
:gsub(
(
tostring(
pattern
)
..
"$"
)
,
(
''
)
)
end
return
setmetatable(
{
escape
=
escape
,
split
=
split
,
trim
=
trim
,
}
,
{
__index
=
string
,
}
)
-- Compiled with Erde 0.5-1
-- __ERDE_COMPILED__